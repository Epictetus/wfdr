#!/usr/bin/env python
import os
import sys

class bcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'

    def disable(self):
        self.HEADER = ''
        self.OKBLUE = ''
        self.OKGREEN = ''
        self.WARNING = ''
        self.FAIL = ''
        self.ENDC = ''
        
os.chdir('framework/src')

if os.system('gomake'):
	print bcolors.FAIL + "Build failed :(" + bcolors.ENDC
	sys.exit(1)

os.chdir('../..')

if os.system('wfdr compile all'):
	print bcolors.WARNING + "Compiling modules failed" + bcolors.ENDC
	print "Because it might be a module you don't care about, we're continuing happily :)"
	print "Although you might want to look into the issue..."
	#sys.exit(0)
	
rows, columns = os.popen('stty size', 'r').read().split()

header = ""
for i in range(int(columns)-2):
	header += "-"
header = "+" + header + "+"
divider = ""
for i in range((int(columns)-8)/2):
	divider += " "
print bcolors.OKGREEN + header
print "|" + divider + " DONE!" + divider + "|"
print header + bcolors.ENDC
print "Framework has been built! To run it, start the daemon in one terminal using wfdr-deamon [sic], and then control modules using the wfdr command."
print "wfdr start <modulename> starts a module, wfdr stop <modulename> stops, etc. Run wfdr with no arguments to see usage."